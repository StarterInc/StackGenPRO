package io.starter.generio.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.starter.generio.model.Category;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 Application API Spec
 ############################## DO NOT EDIT: GENERATED FILE ##############################

    Generated by Starter Ignite: http://starter.io/ignite
    Powered by Swagger Codegen: http://swagger.io

	Template file: JavaSpring/pojo.mustache
	
############################## DO NOT EDIT: GENERATED FILE ##############################
 */
@ApiModel(description = "Application API Spec")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-01-30T12:20:21.685-08:00")

public class ApiSpec  implements  io.starter.ignite.model.DataModelObject {

  @JsonProperty("id")
  public Long id = null;


  @JsonProperty("category")
  public Category category = null;


  @JsonProperty("name")
  public String name = null;


  @JsonProperty("adminServerHost")
  public String adminServerHost = null;


  @JsonProperty("adminServerPort")
  public String adminServerPort = null;


  @JsonProperty("hostName")
  public String hostName = null;


  @JsonProperty("hostPort")
  public String hostPort = null;


  @JsonProperty("orgName")
  public String orgName = null;


  @JsonProperty("myBatisMain")
  public String myBatisMain = null;


  @JsonProperty("myBatisJava")
  public String myBatisJava = null;


  @JsonProperty("starterIgniteSecureKey")
  public String starterIgniteSecureKey = null;


  @JsonProperty("dbUrl")
  public String dbUrl = null;


  @JsonProperty("dbName")
  public String dbName = null;


  @JsonProperty("dbUser")
  public String dbUser = null;


// add the Starter Ignite Annotations
  @io.starter.ignite.security.securefield.SecureField(enabled=true)
  @JsonProperty("dbPassword")
  public String dbPassword = null;


  @JsonProperty("dbGenDropTable")
  public Boolean dbGenDropTable = null;


  @JsonProperty("schemaName")
  public String schemaName = null;


// add the Starter Ignite Annotations
  @io.starter.ignite.model.DataField("component=IgniteTextEditor{data.node}")
  @JsonProperty("schemaData")
  public String schemaData = null;


  @JsonProperty("artifactId")
  public String artifactId = null;

  /**
   * API status as of last check
   */
  public enum StatusEnum {
    AVAILABLE("available"),
    
    RUNTIME_ERROR("runtime-error"),
    
    COMPILATION_ERROR("compilation-error"),
    
    LOCKED("locked");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }


  @JsonProperty("status")
  public StatusEnum status = null;


  @JsonProperty("keyVersion")
  public Long keyVersion = null;


  @JsonProperty("keySpec")
  public String keySpec = "dev";


  @JsonProperty("ownerId")
  public Long ownerId = null;


  @JsonProperty("createdDate")
  public OffsetDateTime createdDate = null;


  @JsonProperty("modifiedDate")
  public OffsetDateTime modifiedDate = null;

  public ApiSpec id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Primary Key for Object (generated)
   * @return id
  **/


  @ApiModelProperty(      value = "Primary Key for Object (generated)")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ApiSpec category(Category category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/

  @Valid

  @ApiModelProperty(      value = "")
  public Category getCategory() {
    return category;
  }

  public void setCategory(Category category) {
    this.category = category;
  }

  public ApiSpec name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of the service API displayed in the UI
   * @return name
  **/
  @NotNull


  @ApiModelProperty(example = "My Microservice API",       required = true, value = "name of the service API displayed in the UI")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ApiSpec adminServerHost(String adminServerHost) {
    this.adminServerHost = adminServerHost;
    return this;
  }

   /**
   * host name of to connect to the admin server
   * @return adminServerHost
  **/

@Size(max=256) 
  @ApiModelProperty(example = "host name of the admin server",      maxLength = 256,  value = "host name of to connect to the admin server")
  public String getAdminServerHost() {
    return adminServerHost;
  }

  public void setAdminServerHost(String adminServerHost) {
    this.adminServerHost = adminServerHost;
  }

  public ApiSpec adminServerPort(String adminServerPort) {
    this.adminServerPort = adminServerPort;
    return this;
  }

   /**
   * port of to connect to the admin server
   * @return adminServerPort
  **/

@Size(max=256) 
  @ApiModelProperty(example = "port of the admin server",      maxLength = 256,  value = "port of to connect to the admin server")
  public String getAdminServerPort() {
    return adminServerPort;
  }

  public void setAdminServerPort(String adminServerPort) {
    this.adminServerPort = adminServerPort;
  }

  public ApiSpec hostName(String hostName) {
    this.hostName = hostName;
    return this;
  }

   /**
   * host of this service
   * @return hostName
  **/

@Size(max=256) 
  @ApiModelProperty(example = "localhost",      maxLength = 256,  value = "host of this service")
  public String getHostName() {
    return hostName;
  }

  public void setHostName(String hostName) {
    this.hostName = hostName;
  }

  public ApiSpec hostPort(String hostPort) {
    this.hostPort = hostPort;
    return this;
  }

   /**
   * port of this service
   * @return hostPort
  **/

@Size(max=256) 
  @ApiModelProperty(example = "6969",      maxLength = 256,  value = "port of this service")
  public String getHostPort() {
    return hostPort;
  }

  public void setHostPort(String hostPort) {
    this.hostPort = hostPort;
  }

  public ApiSpec orgName(String orgName) {
    this.orgName = orgName;
    return this;
  }

   /**
   * the name of the organization owner of the service used in classpath
   * @return orgName
  **/

@Size(max=256) 
  @ApiModelProperty(example = "io.starter",      maxLength = 256,  value = "the name of the organization owner of the service used in classpath")
  public String getOrgName() {
    return orgName;
  }

  public void setOrgName(String orgName) {
    this.orgName = orgName;
  }

  public ApiSpec myBatisMain(String myBatisMain) {
    this.myBatisMain = myBatisMain;
    return this;
  }

   /**
   * relative path to the MyBatis source files
   * @return myBatisMain
  **/

@Size(max=256) 
  @ApiModelProperty(example = "gen/src/",      maxLength = 256,  value = "relative path to the MyBatis source files")
  public String getMyBatisMain() {
    return myBatisMain;
  }

  public void setMyBatisMain(String myBatisMain) {
    this.myBatisMain = myBatisMain;
  }

  public ApiSpec myBatisJava(String myBatisJava) {
    this.myBatisJava = myBatisJava;
    return this;
  }

   /**
   * path for the MyBatis Java model output files
   * @return myBatisJava
  **/

@Size(max=256) 
  @ApiModelProperty(example = "gen/src/main/java/io/starter/ignite/model/",      maxLength = 256,  value = "path for the MyBatis Java model output files")
  public String getMyBatisJava() {
    return myBatisJava;
  }

  public void setMyBatisJava(String myBatisJava) {
    this.myBatisJava = myBatisJava;
  }

  public ApiSpec starterIgniteSecureKey(String starterIgniteSecureKey) {
    this.starterIgniteSecureKey = starterIgniteSecureKey;
    return this;
  }

   /**
   * Secure key used to encrypt the data in the new platform
   * @return starterIgniteSecureKey
  **/

@Size(max=256) 
  @ApiModelProperty(example = "=W34sdcwdsfwC34=",      maxLength = 256,  value = "Secure key used to encrypt the data in the new platform")
  public String getStarterIgniteSecureKey() {
    return starterIgniteSecureKey;
  }

  public void setStarterIgniteSecureKey(String starterIgniteSecureKey) {
    this.starterIgniteSecureKey = starterIgniteSecureKey;
  }

  public ApiSpec dbUrl(String dbUrl) {
    this.dbUrl = dbUrl;
    return this;
  }

   /**
   * database for the system
   * @return dbUrl
  **/

@Size(max=256) 
  @ApiModelProperty(example = "db.mycompany.rds.us-west-2.rds.amazonaws.com",      maxLength = 256,  value = "database for the system")
  public String getDbUrl() {
    return dbUrl;
  }

  public void setDbUrl(String dbUrl) {
    this.dbUrl = dbUrl;
  }

  public ApiSpec dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

   /**
   * db schema for the system - must exist prior to initialization
   * @return dbName
  **/

@Size(max=256) 
  @ApiModelProperty(example = "ignite",      maxLength = 256,  value = "db schema for the system - must exist prior to initialization")
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }

  public ApiSpec dbUser(String dbUser) {
    this.dbUser = dbUser;
    return this;
  }

   /**
   * database user for the system
   * @return dbUser
  **/

@Size(max=256) 
  @ApiModelProperty(example = "igniteuser",      maxLength = 256,  value = "database user for the system")
  public String getDbUser() {
    return dbUser;
  }

  public void setDbUser(String dbUser) {
    this.dbUser = dbUser;
  }

  public ApiSpec dbPassword(String dbPassword) {
    this.dbPassword = dbPassword;
    return this;
  }

   /**
   * database password for the system
   * @return dbPassword
  **/

@Size(max=256) 
  @ApiModelProperty(example = "ABDCEDF",      maxLength = 256,  value = "database password for the system")
  public String getDbPassword() {
    return dbPassword;
  }

  public void setDbPassword(String dbPassword) {
    this.dbPassword = dbPassword;
  }

  public ApiSpec dbGenDropTable(Boolean dbGenDropTable) {
    this.dbGenDropTable = dbGenDropTable;
    return this;
  }

   /**
   * rename and recreate any pre-existing tables during generation
   * @return dbGenDropTable
  **/


  @ApiModelProperty(example = "true",       value = "rename and recreate any pre-existing tables during generation")
  public Boolean isDbGenDropTable() {
    return dbGenDropTable;
  }

  public void setDbGenDropTable(Boolean dbGenDropTable) {
    this.dbGenDropTable = dbGenDropTable;
  }

  public ApiSpec schemaName(String schemaName) {
    this.schemaName = schemaName;
    return this;
  }

   /**
   * database table prefix
   * @return schemaName
  **/

@Size(max=256) 
  @ApiModelProperty(example = "starter",      maxLength = 256,  value = "database table prefix")
  public String getSchemaName() {
    return schemaName;
  }

  public void setSchemaName(String schemaName) {
    this.schemaName = schemaName;
  }

  public ApiSpec schemaData(String schemaData) {
    this.schemaData = schemaData;
    return this;
  }

   /**
   * OpenAPI Schema Instance
   * @return schemaData
  **/


  @ApiModelProperty(example = "Complete OpenAPI Schema Contents...",       value = "OpenAPI Schema Instance")
  public String getSchemaData() {
    return schemaData;
  }

  public void setSchemaData(String schemaData) {
    this.schemaData = schemaData;
  }

  public ApiSpec artifactId(String artifactId) {
    this.artifactId = artifactId;
    return this;
  }

   /**
   * database for the system
   * @return artifactId
  **/

@Size(max=256) 
  @ApiModelProperty(example = "ignite",      maxLength = 256,  value = "database for the system")
  public String getArtifactId() {
    return artifactId;
  }

  public void setArtifactId(String artifactId) {
    this.artifactId = artifactId;
  }

  public ApiSpec status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * API status as of last check
   * @return status
  **/


  @ApiModelProperty(      value = "API status as of last check")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ApiSpec keyVersion(Long keyVersion) {
    this.keyVersion = keyVersion;
    return this;
  }

   /**
   * The version of the SecureField key used to crypt this row (generated)
   * @return keyVersion
  **/


  @ApiModelProperty(      value = "The version of the SecureField key used to crypt this row (generated)")
  public Long getKeyVersion() {
    return keyVersion;
  }

  public void setKeyVersion(Long keyVersion) {
    this.keyVersion = keyVersion;
  }

  public ApiSpec keySpec(String keySpec) {
    this.keySpec = keySpec;
    return this;
  }

   /**
   * The spec of the SecureField key used to crypt this row (generated)
   * @return keySpec
  **/


  @ApiModelProperty(example = "{keyOwner:111, keySource:'session | system'}",       value = "The spec of the SecureField key used to crypt this row (generated)")
  public String getKeySpec() {
    return keySpec;
  }

  public void setKeySpec(String keySpec) {
    this.keySpec = keySpec;
  }

  public ApiSpec ownerId(Long ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * The ID of the user that owns this data (generated)
   * @return ownerId
  **/


  @ApiModelProperty(      value = "The ID of the user that owns this data (generated)")
  public Long getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(Long ownerId) {
    this.ownerId = ownerId;
  }

  public ApiSpec createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * The created date for this record/object (generated)
   * @return createdDate
  **/

  @Valid

  @ApiModelProperty(      value = "The created date for this record/object (generated)")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public ApiSpec modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * The last-modified date for this record/object (generated)
   * @return modifiedDate
  **/

  @Valid

  @ApiModelProperty(      value = "The last-modified date for this record/object (generated)")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiSpec apiSpec = (ApiSpec) o;
    return Objects.equals(this.id, apiSpec.id) &&
        Objects.equals(this.category, apiSpec.category) &&
        Objects.equals(this.name, apiSpec.name) &&
        Objects.equals(this.adminServerHost, apiSpec.adminServerHost) &&
        Objects.equals(this.adminServerPort, apiSpec.adminServerPort) &&
        Objects.equals(this.hostName, apiSpec.hostName) &&
        Objects.equals(this.hostPort, apiSpec.hostPort) &&
        Objects.equals(this.orgName, apiSpec.orgName) &&
        Objects.equals(this.myBatisMain, apiSpec.myBatisMain) &&
        Objects.equals(this.myBatisJava, apiSpec.myBatisJava) &&
        Objects.equals(this.starterIgniteSecureKey, apiSpec.starterIgniteSecureKey) &&
        Objects.equals(this.dbUrl, apiSpec.dbUrl) &&
        Objects.equals(this.dbName, apiSpec.dbName) &&
        Objects.equals(this.dbUser, apiSpec.dbUser) &&
        Objects.equals(this.dbPassword, apiSpec.dbPassword) &&
        Objects.equals(this.dbGenDropTable, apiSpec.dbGenDropTable) &&
        Objects.equals(this.schemaName, apiSpec.schemaName) &&
        Objects.equals(this.schemaData, apiSpec.schemaData) &&
        Objects.equals(this.artifactId, apiSpec.artifactId) &&
        Objects.equals(this.status, apiSpec.status) &&
        Objects.equals(this.keyVersion, apiSpec.keyVersion) &&
        Objects.equals(this.keySpec, apiSpec.keySpec) &&
        Objects.equals(this.ownerId, apiSpec.ownerId) &&
        Objects.equals(this.createdDate, apiSpec.createdDate) &&
        Objects.equals(this.modifiedDate, apiSpec.modifiedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, category, name, adminServerHost, adminServerPort, hostName, hostPort, orgName, myBatisMain, myBatisJava, starterIgniteSecureKey, dbUrl, dbName, dbUser, dbPassword, dbGenDropTable, schemaName, schemaData, artifactId, status, keyVersion, keySpec, ownerId, createdDate, modifiedDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiSpec {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    adminServerHost: ").append(toIndentedString(adminServerHost)).append("\n");
    sb.append("    adminServerPort: ").append(toIndentedString(adminServerPort)).append("\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("    hostPort: ").append(toIndentedString(hostPort)).append("\n");
    sb.append("    orgName: ").append(toIndentedString(orgName)).append("\n");
    sb.append("    myBatisMain: ").append(toIndentedString(myBatisMain)).append("\n");
    sb.append("    myBatisJava: ").append(toIndentedString(myBatisJava)).append("\n");
    sb.append("    starterIgniteSecureKey: ").append(toIndentedString(starterIgniteSecureKey)).append("\n");
    sb.append("    dbUrl: ").append(toIndentedString(dbUrl)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    dbUser: ").append(toIndentedString(dbUser)).append("\n");
    sb.append("    dbPassword: ").append(toIndentedString(dbPassword)).append("\n");
    sb.append("    dbGenDropTable: ").append(toIndentedString(dbGenDropTable)).append("\n");
    sb.append("    schemaName: ").append(toIndentedString(schemaName)).append("\n");
    sb.append("    schemaData: ").append(toIndentedString(schemaData)).append("\n");
    sb.append("    artifactId: ").append(toIndentedString(artifactId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    keyVersion: ").append(toIndentedString(keyVersion)).append("\n");
    sb.append("    keySpec: ").append(toIndentedString(keySpec)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
  * Starter Ignite JSON method
  */
  @Override
  public String toJSON() {
    String ret =  new org.json.JSONObject(this).toString();
    ret = ret.replace("\\\"","\"");
    ret = ret.replace("\"}\"", "\"}");
    return ret;
  }
  
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

