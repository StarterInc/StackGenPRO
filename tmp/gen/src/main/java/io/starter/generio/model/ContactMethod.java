package io.starter.generio.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 ContactMethod
 ############################## DO NOT EDIT: GENERATED FILE ##############################

    Generated by Starter Ignite: http://starter.io/ignite
    Powered by Swagger Codegen: http://swagger.io

	Template file: JavaSpring/pojo.mustache
	
############################## DO NOT EDIT: GENERATED FILE ##############################
 */

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-01-30T12:20:21.685-08:00")

public class ContactMethod  implements  io.starter.ignite.model.DataModelObject {

  @JsonProperty("id")
  public Long id = null;


  @JsonProperty("messageTypeDescription")
  public String messageTypeDescription = null;

  /**
   * Gets or Sets messageType
   */
  public enum MessageTypeEnum {
    GITHUB("github"),
    
    EMAIL("email"),
    
    TWITTER("twitter"),
    
    MOBILE("mobile"),
    
    SMS("sms"),
    
    FACEBOOK("facebook");

    private String value;

    MessageTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MessageTypeEnum fromValue(String text) {
      for (MessageTypeEnum b : MessageTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }


  @JsonProperty("messageType")
  public MessageTypeEnum messageType = null;

  /**
   * Contact Method Status
   */
  public enum StatusEnum {
    NEW("new"),
    
    VALIDATED("validated"),
    
    CLOSED("closed"),
    
    DNC("DNC"),
    
    ADMIN("ADMIN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }


  @JsonProperty("status")
  public StatusEnum status = null;


  @JsonProperty("complete")
  public Boolean complete = false;


  @JsonProperty("keyVersion")
  public Long keyVersion = null;


  @JsonProperty("keySpec")
  public String keySpec = "dev";


  @JsonProperty("ownerId")
  public Long ownerId = null;


  @JsonProperty("createdDate")
  public OffsetDateTime createdDate = null;


  @JsonProperty("modifiedDate")
  public OffsetDateTime modifiedDate = null;

  public ContactMethod id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Primary Key for Object (generated)
   * @return id
  **/
  @NotNull


  @ApiModelProperty(      required = true, value = "Primary Key for Object (generated)")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ContactMethod messageTypeDescription(String messageTypeDescription) {
    this.messageTypeDescription = messageTypeDescription;
    return this;
  }

   /**
   * Get messageTypeDescription
   * @return messageTypeDescription
  **/


  @ApiModelProperty(example = "twitter handle",       value = "")
  public String getMessageTypeDescription() {
    return messageTypeDescription;
  }

  public void setMessageTypeDescription(String messageTypeDescription) {
    this.messageTypeDescription = messageTypeDescription;
  }

  public ContactMethod messageType(MessageTypeEnum messageType) {
    this.messageType = messageType;
    return this;
  }

   /**
   * Get messageType
   * @return messageType
  **/


  @ApiModelProperty(example = "email",       value = "")
  public MessageTypeEnum getMessageType() {
    return messageType;
  }

  public void setMessageType(MessageTypeEnum messageType) {
    this.messageType = messageType;
  }

  public ContactMethod status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Contact Method Status
   * @return status
  **/


  @ApiModelProperty(      value = "Contact Method Status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ContactMethod complete(Boolean complete) {
    this.complete = complete;
    return this;
  }

   /**
   * Get complete
   * @return complete
  **/


  @ApiModelProperty(      value = "")
  public Boolean isComplete() {
    return complete;
  }

  public void setComplete(Boolean complete) {
    this.complete = complete;
  }

  public ContactMethod keyVersion(Long keyVersion) {
    this.keyVersion = keyVersion;
    return this;
  }

   /**
   * The version of the SecureField key used to crypt this row (generated)
   * @return keyVersion
  **/


  @ApiModelProperty(      value = "The version of the SecureField key used to crypt this row (generated)")
  public Long getKeyVersion() {
    return keyVersion;
  }

  public void setKeyVersion(Long keyVersion) {
    this.keyVersion = keyVersion;
  }

  public ContactMethod keySpec(String keySpec) {
    this.keySpec = keySpec;
    return this;
  }

   /**
   * The spec of the SecureField key used to crypt this row (generated)
   * @return keySpec
  **/


  @ApiModelProperty(example = "{keyOwner:111, keySource:'session | system'}",       value = "The spec of the SecureField key used to crypt this row (generated)")
  public String getKeySpec() {
    return keySpec;
  }

  public void setKeySpec(String keySpec) {
    this.keySpec = keySpec;
  }

  public ContactMethod ownerId(Long ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * The ID of the user that owns this data (generated)
   * @return ownerId
  **/


  @ApiModelProperty(      value = "The ID of the user that owns this data (generated)")
  public Long getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(Long ownerId) {
    this.ownerId = ownerId;
  }

  public ContactMethod createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * The created date for this record/object (generated)
   * @return createdDate
  **/

  @Valid

  @ApiModelProperty(      value = "The created date for this record/object (generated)")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public ContactMethod modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * The last-modified date for this record/object (generated)
   * @return modifiedDate
  **/

  @Valid

  @ApiModelProperty(      value = "The last-modified date for this record/object (generated)")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactMethod contactMethod = (ContactMethod) o;
    return Objects.equals(this.id, contactMethod.id) &&
        Objects.equals(this.messageTypeDescription, contactMethod.messageTypeDescription) &&
        Objects.equals(this.messageType, contactMethod.messageType) &&
        Objects.equals(this.status, contactMethod.status) &&
        Objects.equals(this.complete, contactMethod.complete) &&
        Objects.equals(this.keyVersion, contactMethod.keyVersion) &&
        Objects.equals(this.keySpec, contactMethod.keySpec) &&
        Objects.equals(this.ownerId, contactMethod.ownerId) &&
        Objects.equals(this.createdDate, contactMethod.createdDate) &&
        Objects.equals(this.modifiedDate, contactMethod.modifiedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, messageTypeDescription, messageType, status, complete, keyVersion, keySpec, ownerId, createdDate, modifiedDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactMethod {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    messageTypeDescription: ").append(toIndentedString(messageTypeDescription)).append("\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    complete: ").append(toIndentedString(complete)).append("\n");
    sb.append("    keyVersion: ").append(toIndentedString(keyVersion)).append("\n");
    sb.append("    keySpec: ").append(toIndentedString(keySpec)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
  * Starter Ignite JSON method
  */
  @Override
  public String toJSON() {
    String ret =  new org.json.JSONObject(this).toString();
    ret = ret.replace("\\\"","\"");
    ret = ret.replace("\"}\"", "\"}");
    return ret;
  }
  
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

