package io.starter.generio.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 LedgerEntry
 ############################## DO NOT EDIT: GENERATED FILE ##############################

    Generated by Starter Ignite: http://starter.io/ignite
    Powered by Swagger Codegen: http://swagger.io

	Template file: JavaSpring/pojo.mustache
	
############################## DO NOT EDIT: GENERATED FILE ##############################
 */

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-01-30T12:20:21.685-08:00")

public class LedgerEntry  implements  io.starter.ignite.model.DataModelObject {

  @JsonProperty("id")
  public Long id = null;


  @JsonProperty("accountId")
  public Long accountId = null;


  @JsonProperty("orderId")
  public Long orderId = null;


  @JsonProperty("entryValue")
  public Double entryValue = null;


// add the Starter Ignite Annotations
  @io.starter.ignite.security.securefield.SecureField(enabled=true)
  @JsonProperty("institutionName")
  public String institutionName = null;


  @JsonProperty("description")
  public String description = null;


  @JsonProperty("accountBalance")
  public Double accountBalance = null;

  /**
   * Transaction Status
   */
  public enum StatusEnum {
    READY("ready"),
    
    CLOSED("closed"),
    
    EXECUTED("executed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }


  @JsonProperty("status")
  public StatusEnum status = null;

  /**
   * Transaction Type
   */
  public enum TransactionTypeEnum {
    DEBIT("debit"),
    
    CREDIT("credit"),
    
    DEPOSIT("deposit"),
    
    VOID("void"),
    
    REFUND("refund");

    private String value;

    TransactionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TransactionTypeEnum fromValue(String text) {
      for (TransactionTypeEnum b : TransactionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }


  @JsonProperty("transactionType")
  public TransactionTypeEnum transactionType = null;


  @JsonProperty("verified")
  public Boolean verified = false;


  @JsonProperty("keyVersion")
  public Long keyVersion = null;


  @JsonProperty("keySpec")
  public String keySpec = "dev";


  @JsonProperty("ownerId")
  public Long ownerId = null;


  @JsonProperty("createdDate")
  public OffsetDateTime createdDate = null;


  @JsonProperty("modifiedDate")
  public OffsetDateTime modifiedDate = null;

  public LedgerEntry id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Primary Key for Object (generated)
   * @return id
  **/


  @ApiModelProperty(      value = "Primary Key for Object (generated)")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public LedgerEntry accountId(Long accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/


  @ApiModelProperty(      value = "")
  public Long getAccountId() {
    return accountId;
  }

  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }

  public LedgerEntry orderId(Long orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/


  @ApiModelProperty(      value = "")
  public Long getOrderId() {
    return orderId;
  }

  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }

  public LedgerEntry entryValue(Double entryValue) {
    this.entryValue = entryValue;
    return this;
  }

   /**
   * Get entryValue
   * @return entryValue
  **/


  @ApiModelProperty(      value = "")
  public Double getEntryValue() {
    return entryValue;
  }

  public void setEntryValue(Double entryValue) {
    this.entryValue = entryValue;
  }

  public LedgerEntry institutionName(String institutionName) {
    this.institutionName = institutionName;
    return this;
  }

   /**
   * Get institutionName
   * @return institutionName
  **/


  @ApiModelProperty(      value = "")
  public String getInstitutionName() {
    return institutionName;
  }

  public void setInstitutionName(String institutionName) {
    this.institutionName = institutionName;
  }

  public LedgerEntry description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/


  @ApiModelProperty(      value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public LedgerEntry accountBalance(Double accountBalance) {
    this.accountBalance = accountBalance;
    return this;
  }

   /**
   * Get accountBalance
   * @return accountBalance
  **/


  @ApiModelProperty(      value = "")
  public Double getAccountBalance() {
    return accountBalance;
  }

  public void setAccountBalance(Double accountBalance) {
    this.accountBalance = accountBalance;
  }

  public LedgerEntry status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Transaction Status
   * @return status
  **/


  @ApiModelProperty(      value = "Transaction Status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public LedgerEntry transactionType(TransactionTypeEnum transactionType) {
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Transaction Type
   * @return transactionType
  **/


  @ApiModelProperty(      value = "Transaction Type")
  public TransactionTypeEnum getTransactionType() {
    return transactionType;
  }

  public void setTransactionType(TransactionTypeEnum transactionType) {
    this.transactionType = transactionType;
  }

  public LedgerEntry verified(Boolean verified) {
    this.verified = verified;
    return this;
  }

   /**
   * Get verified
   * @return verified
  **/


  @ApiModelProperty(      value = "")
  public Boolean isVerified() {
    return verified;
  }

  public void setVerified(Boolean verified) {
    this.verified = verified;
  }

  public LedgerEntry keyVersion(Long keyVersion) {
    this.keyVersion = keyVersion;
    return this;
  }

   /**
   * The version of the SecureField key used to crypt this row (generated)
   * @return keyVersion
  **/


  @ApiModelProperty(      value = "The version of the SecureField key used to crypt this row (generated)")
  public Long getKeyVersion() {
    return keyVersion;
  }

  public void setKeyVersion(Long keyVersion) {
    this.keyVersion = keyVersion;
  }

  public LedgerEntry keySpec(String keySpec) {
    this.keySpec = keySpec;
    return this;
  }

   /**
   * The spec of the SecureField key used to crypt this row (generated)
   * @return keySpec
  **/


  @ApiModelProperty(example = "{keyOwner:111, keySource:'session | system'}",       value = "The spec of the SecureField key used to crypt this row (generated)")
  public String getKeySpec() {
    return keySpec;
  }

  public void setKeySpec(String keySpec) {
    this.keySpec = keySpec;
  }

  public LedgerEntry ownerId(Long ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * The ID of the user that owns this data (generated)
   * @return ownerId
  **/


  @ApiModelProperty(      value = "The ID of the user that owns this data (generated)")
  public Long getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(Long ownerId) {
    this.ownerId = ownerId;
  }

  public LedgerEntry createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * The created date for this record/object (generated)
   * @return createdDate
  **/

  @Valid

  @ApiModelProperty(      value = "The created date for this record/object (generated)")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public LedgerEntry modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * The last-modified date for this record/object (generated)
   * @return modifiedDate
  **/

  @Valid

  @ApiModelProperty(      value = "The last-modified date for this record/object (generated)")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LedgerEntry ledgerEntry = (LedgerEntry) o;
    return Objects.equals(this.id, ledgerEntry.id) &&
        Objects.equals(this.accountId, ledgerEntry.accountId) &&
        Objects.equals(this.orderId, ledgerEntry.orderId) &&
        Objects.equals(this.entryValue, ledgerEntry.entryValue) &&
        Objects.equals(this.institutionName, ledgerEntry.institutionName) &&
        Objects.equals(this.description, ledgerEntry.description) &&
        Objects.equals(this.accountBalance, ledgerEntry.accountBalance) &&
        Objects.equals(this.status, ledgerEntry.status) &&
        Objects.equals(this.transactionType, ledgerEntry.transactionType) &&
        Objects.equals(this.verified, ledgerEntry.verified) &&
        Objects.equals(this.keyVersion, ledgerEntry.keyVersion) &&
        Objects.equals(this.keySpec, ledgerEntry.keySpec) &&
        Objects.equals(this.ownerId, ledgerEntry.ownerId) &&
        Objects.equals(this.createdDate, ledgerEntry.createdDate) &&
        Objects.equals(this.modifiedDate, ledgerEntry.modifiedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountId, orderId, entryValue, institutionName, description, accountBalance, status, transactionType, verified, keyVersion, keySpec, ownerId, createdDate, modifiedDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LedgerEntry {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    entryValue: ").append(toIndentedString(entryValue)).append("\n");
    sb.append("    institutionName: ").append(toIndentedString(institutionName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    accountBalance: ").append(toIndentedString(accountBalance)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("    keyVersion: ").append(toIndentedString(keyVersion)).append("\n");
    sb.append("    keySpec: ").append(toIndentedString(keySpec)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
  * Starter Ignite JSON method
  */
  @Override
  public String toJSON() {
    String ret =  new org.json.JSONObject(this).toString();
    ret = ret.replace("\\\"","\"");
    ret = ret.replace("\"}\"", "\"}");
    return ret;
  }
  
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

