swagger: "2.0"
info:
  description: "This is a sample server eStore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger eStore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "itemstore.swagger.io"
basePath: "/v2"
tags:
- name: "item"
  description: "Everything about your Items"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "store"
  description: "Access to eStore orders"
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /location:
    get:
      tags:
      - location
      summary: searches location
      operationId: searchLocation
      description: |
        By passing in the appropriate options, you can search for
        available location in the system
      produces:
      - application/json
      parameters:
      - in: query
        name: searchString
        description: pass an optional search string for looking up location
        required: false
        type: string
      - in: query
        name: skip
        description: number of records to skip for pagination
        type: integer
        format: int32
        minimum: 0
      - in: query
        name: limit
        description: maximum number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 50
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Location'
        400:
          description: bad input parameter
    post:
      tags:
      - admins
      summary: adds an location item
      operationId: addLocation
      description: Adds an item to the system
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: locationItem
        description: Location item to add
        schema:
          $ref: '#/definitions/Location'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
definitions:
  Location:
    required:
    - id
    - locationname
    - latitude
    - longitude
    properties:
      id:
        type: "integer"
        format: "int64"
      elevation:
        type: "number"
        example: 37.7564084
      latitude:
        type: "number"
        example: 37.7564084
      longitude:
        type: string
        example: 122.4717396
      locationname:
        type: string
        example: Grand View Park
        secureField: true
      country:
        type: string
        example: USA
      email:
        type: string
        example: sparky@starter.io
      homePage:
        type: string
        format: url
        example:  https://www.starter.io
      phone:
        type: string
        example: 222-333-4444
    xml:
      name: "Location"
    x-automator-tag: "agd2asadss"