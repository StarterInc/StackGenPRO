swagger: '2.0'
info:
  description: This is the Starter Ignite API
  version: 1.0.0
  title: Starter Ignite API
  # put the contact info for your development or API team
  contact:
    email: info@ignite.starter.io
  license:
    name: AGPL 3.0
    url: https://www.gnu.org/licenses/agpl-3.0.html
  termsOfService: http://ignite.starter.io/tos/
servers:
  url: https://{username}.automator.ai:{port}/{basePath}
  description: The production API server
  variables:
    username:
      # note! no enum here means it is an open value
      default: demo
      description: this value is assigned by the service provider
    port:
      enum:
        - '8443'
        - '443'
      default: '8443'
    basePath:
      # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`
      default: v1
# tags are used for organizing operations
tags:
- name: admins
  description: Secured Admin-only calls
- name: users
  description: Operations available to regular users
schemes:
- https
paths:
  /account:
    post:
      tags:
      - "account"
      summary: "Add a new account to the system"
      description: ""
      operationId: "addaccount"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "account object that needs to be added to the system"
        required: true
        schema:
          $ref: '#/definitions/Account'
      responses:
        405:
          description: "Invalid input"
      security:
      - automator_auth:
        - "write:items"
        - "read:items"
    put:
      tags:
      - "account"
      summary: "Update an existing account"
      description: ""
      operationId: "updateaccount"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "account object that needs to be updated in the system"
        required: true
        schema:
          $ref: '#/definitions/Account'
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Account not found"
        405:
          description: "Validation exception"
      security:
      - automator_auth:
        - "write:items"
        - "read:items"
  /account/list:
    get:
      tags:
      - "account"
      summary: "Finds accounts by ID"
      description: "Multiple ID values can be provided with comma separated strings"
      operationId: "list"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "ID values that need to be considered for filter"
        required: true
        type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        400:
          description: "Invalid id value"
      security:
      - automator_auth:
        - "write:items"
        - "read:items"
  /content:
    get:
      tags:
      - content
      summary: searches content
      operationId: searchContent
      description: |
        By passing in the appropriate options, you can search for
        available content in the system
      produces:
      - application/json
      parameters:
      - in: query
        name: searchString
        description: pass an optional search string for looking up content
        required: false
        type: string
      - in: query
        name: skip
        description: number of records to skip for pagination
        type: integer
        format: int32
        minimum: 0
      - in: query
        name: limit
        description: maximum number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 50
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Content'
        400:
          description: bad input parameter
    post:
      tags:
      - content
      summary: adds an content item
      operationId: addContent
      description: Adds an item to the system
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: contentItem
        description: Content item to add
        schema:
          $ref: '#/definitions/Content'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
  /user/login:
    get:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        400:
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
securityDefinitions:
  automator_auth:
    type: "oauth2"
    authorizationUrl: "http://ignite.starter.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:items: "modify items in your account"
      read:items: "read your items"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"                    
definitions:
  Account:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      balance:
        type: "number"
        format: "double"
        description: "Account balance point in time"
        x-starter-dataField: component=AccountBalance
      institutionName:
        type: "string"
      accountNumber:
        type: "string"
        x-starter-secureField: true
      routingNumber:
        type: "string"    
      status:
        type: "string"
        description: "Account Status"
        enum:
        - "ready"
        - "closed"
        - "executed"
      verified:
        type: "boolean"
        default: false
    xml:
      name: "Account"
  LedgerEntry:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      accountId:
        type: "integer"
        format: "int64"
      orderId:
        type: "integer"
        format: "int64"
      entryValue:
        type: "number"
        format: "double"
      institutionName:
        type: "string"
        x-starter-secureField: true
      description:
        type: "string"
      accountBalance:
        type: "number"
        format: "double"    
      status:
        type: "string"
        description: "Transaction Status"
        enum:
        - "ready"
        - "closed"
        - "executed"
      transactionType:
        type: "string"
        description: "Transaction Type"
        enum:
        - "debit"
        - "credit"
        - "deposit"        
        - "void"
        - "refund"
      verified:
        type: "boolean"
        default: false
    xml:
      name: "Account"
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      tradeId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      executionDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "executed"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Content:
    type: object
    required:
    - name
    - releaseDate
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: string
        example: Widget Adapter
      data:
        type: string
        example: full content data
        maxLength: 100000      
      authorId:
        type: "integer"
        format: "int64"
      releaseDate:
        type:  string
        format: "date-time"
      organizationId:
        type: "integer"
        format: "int64"
    xml:
      name: "Content"    
  Organization:
    required:
    - id
    - name
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: string
        example: ACME Corporation
      homePage:
        type: string
        format: url
        example:  https://www.acme-corp.com
      phone:
        type: string
        example: 408-867-5309
    xml:
      name: "Organization"         
  User:
    required:
    - id
    - username
    - email
    properties:
      id:
        type: "integer"
        format: "int64"
      fingerprint:
        type: string
        example: DK$DFSJaraDD
        x-starter-secureField: true
      ssn:
        description: This is the value
        type: string
        example: 1112233334
        maxLength: 10
        minLength: 10
        x-starter-secureField: true
      username:
        type: string
        example: Sparky
      homePage:
        type: string
        format: url
        example:  https://www.acme-corp.com
      social:
        type: string
        format: url
        example:  https://twitter.com/StarterIO
    xml:
      name: "User"
  WorkFlows:
    required:
    - id
    - description
    - json
    properties:
      id:
        type: "integer"
        format: "int64"
      fingerprint:
        type: string
        example: DK$DFSJaraDD
      sourceType:
        type: string
        example: user
      sourceOwner:
        type: string
        example: userId:d290f1ee-6c54-4b01-90e6-d701748f0851
      json:
        type: string
        example: Sparkyt
        description: this value is the JSON content of the WorkFlow definition
      xml:
        type: string
        example: Sparkyt
    xml:
      name: "Workflows"
  ContactMethod:        
    type: object
    required:
    - id
    - name
    - ticker
    properties:
      id:
        type: "integer"
        format: "int64"      
      messageTypeDescription:
        type: string
        example: twitter handle
      messageType:
        type: string
        example: email
        enum:
        - "github"        
        - "email"
        - "twitter"
        - "mobile"
        - "sms"
        - "facebook"
      status:
        type: "string"
        description: "Contact Method Status"
        enum:
        - "new"
        - "validated"
        - "closed"
        - "DNC"
        - "ADMIN"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "ContactMethod"
  AuditLog:
    required:
    - id
    - sourceType
    - json
    properties:
      id:
        type: "integer"
        format: "int64"
      fingerprint:
        type: string
        example: DK$DFSJaraDD
      sourceType:
        type: string
        example: user
      sourceOwner:
        type: string
        example: userId:1000
      json:
        type: string
        example: Sparkyt
        maxLength: 10000
    xml:
      name: "AuditLog"
  Data:
    required:
    - id
    - sourceType
    - json
    properties:
      id:
        type: "integer"
        format: "int64"
      fingerprint:
        type: string
        example: D234234ER
      type:
        type: string
        example: user
      json:
        type: string
        example: Sparkyt
        maxLength: 10000         
    xml:
      name: "Data"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"

# Special Object for tracking and instantiating OpenAPI Schema instances

  ApiSpec:
    description: "Application API Spec"
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "My Microservice API"
        description: "name of the service API displayed in the UI"    
      adminServerHost:
        type: "string"
        example: "host name of the admin server"
        maxLength: 256
        description: "host name of to connect to the admin server"
      adminServerPort:
        type: "string"
        example: "port of the admin server"
        maxLength: 256 
        description: "port of to connect to the admin server"        
      hostName:
        type: "string"
        example: "localhost"
        maxLength: 256 
        description: "host of this service"          
      hostPort:
        type: "string"
        example: "6969"
        maxLength: 256 
        description: "port of this service"
      orgName:
        type: "string"
        example: "io.starter"
        maxLength: 256 
        description: "the name of the organization owner of the service used in classpath"
      myBatisMain:
        type: "string"
        example: "gen/src/"
        maxLength: 256 
        description: "relative path to the MyBatis source files"
      myBatisJava:
        type: "string"
        example: "gen/src/main/java/io/starter/ignite/model/"
        maxLength: 256 
        description: "path for the MyBatis Java model output files"     
      starterIgniteSecureKey:
        type: "string"
        example: "=W34sdcwdsfwC34="
        maxLength: 256 
        description: "Secure key used to encrypt the data in the new platform"                     
      dbUrl:
        type: "string"
        example: "db.mycompany.rds.us-west-2.rds.amazonaws.com"
        maxLength: 256 
        description: "database for the system"          
      dbName:
        type: "string"
        example: "ignite"
        maxLength: 256 
        description: "db schema for the system - must exist prior to initialization"          
      dbUser:
        type: "string"
        example: "igniteuser"
        maxLength: 256 
        description: "database user for the system"    
      dbPassword:
        type: "string"
        example: "ABDCEDF"
        maxLength: 256 
        description: "database password for the system" 
        x-starter-secureField: true
      dbGenDropTable:
        type: boolean
        example: true 
        description: "rename and recreate any pre-existing tables during generation" 
      schemaName:
        type: "string"
        example: "starter"
        maxLength: 256 
        description: "database table prefix" 
      schemaData:
        type: "string"
        example: "Complete OpenAPI Schema Contents..."
        description: "OpenAPI Schema Instance"
        x-starter-dataField: component=IgniteTextEditor{data.node}
      artifactId:
        type: "string"
        example: "ignite"
        maxLength: 256 
        description: "database for the system"      
      status:
        type: "string"
        description: "API status as of last check"
        enum:
        - "available"
        - "runtime-error"
        - "compilation-error"
        - "locked"
    xml:
      name: "ApiSpec"
  Item:
    description: "Products or Services"
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
        description: "name of the item displayed in the store"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "item status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Item"
  ApiResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string" 
externalDocs:
  description: "Find out more about Starter Ignite"
  url: "https://starterinc.github.io/Ignite/"    